#ifndef SBDetectorConstruction_h
#define SBDetectorConstruction_h 1

#include "G4VUserDetectorConstruction.hh"
#include "globals.hh"

class G4Box;
class G4Tubs;
class G4Polycone;
class G4LogicalVolume;
class G4VPhysicalVolume;
class G4Material;
class SBDetectorMessenger;
class SBFieldSetup;

class SBDetectorConstruction : public G4VUserDetectorConstruction
{
public:
  
  SBDetectorConstruction();
  ~SBDetectorConstruction();

public:
     
  void SetTargetMaterial (G4String);
  void SetTargetThickness(G4double);
  void SetTargetDiameter(G4double);
  void SetLocalMagField(G4double,G4LogicalVolume*);
  G4VPhysicalVolume* Construct();

  void SetHornDesign(G4int);// switch
  void SetHorn_r(G4double);//longit. curvature radius at entrance
  void SetHorn_R(G4double);//longit. curvature radius at exit
  void SetHorn_R0(G4double);//inner bore radius
  void SetHorn_R1(G4double);//outer radius
  void SetHorn_R2(G4double);//inner radius of alcove
  void SetHorn_L1(G4double);//longit length1
  void SetHorn_L2(G4double);//longit length2
  void SetHorn_L3(G4double);//longit length3
  void SetHorn_L4(G4double);//longit length4
  void SetHorn_L5(G4double);//longit length5

  void SetHorn_I1(G4double);//current 1
  void SetHorn_I2(G4double);//current 2

  void SetHorn2_r(G4double);//longit. curvature radius at entrance
  void SetHorn2_R(G4double);//longit. curvature radius at exit
  void SetHorn2_R0(G4double);//inner bore radius
  void SetHorn2_R1(G4double);//outer radius
  void SetHorn2_R2(G4double);//inner radius of alcove
  void SetHorn2_L1(G4double);//longit length1
  void SetHorn2_L2(G4double);//longit length2
  void SetHorn2_L3(G4double);//longit length3
  void SetHorn2_L4(G4double);//longit length4
  void SetHorn2_L5(G4double);//longit length5

  G4int GetHornDesign(){return HornDesign;}
  G4double GetHorn_r();
  G4double GetHorn_R();
  G4double GetHorn_R0();
  G4double GetHorn_R1();
  G4double GetHorn_R2();
  G4double GetHorn_L1();
  G4double GetHorn_L2();
  G4double GetHorn_L3();
  G4double GetHorn_L4();
  G4double GetHorn_L5();

  G4double GetHorn_I1();
  G4double GetHorn_I2();

  G4double GetHorn2_r();
  G4double GetHorn2_R();
  G4double GetHorn2_R0();
  G4double GetHorn2_R1();
  G4double GetHorn2_R2();
  G4double GetHorn2_L1();
  G4double GetHorn2_L2();
  G4double GetHorn2_L3();
  G4double GetHorn2_L4();
  G4double GetHorn2_L5();

  void UpdateGeometry();
     
public:
  
  void PrintHornParameters(); 
                    
  G4double GetHallSizeX()          {return 2.*rO_Hall;}; 
  G4double GetHallSizeY()          {return 2.*rO_Hall;};
  G4double GetHallSizeZ()          {return L_Hall;};

  G4double GetTunnelLength()          {return TunnelLength;};
  G4double GetTunnelRadius()          {return TunnelRadius;};

  void SetTunnelLength(G4double val){TunnelLength=val;};
  void SetTunnelRadius(G4double val){TunnelRadius=val;};

  G4double GetInnerConductorLength()  {return 2.*InCondHalfLength;};
     
  G4double GetTargetThickness()       {return TargetThickness;}; 
  G4double GetTargetDiameter()       {return TargetDiameter;}; 
  G4Material* GetTargetMaterial()  {return TargetMaterial;};
  G4double GetTargetZetaPos()  {return TargetZetaPos;};
          
  const G4VPhysicalVolume* GetphysiWorld() {return physiWorld;};           
  const G4VPhysicalVolume* GetTarget()   {return physiTarget;};
                 
private:
     
  G4Material*        TargetMaterial;
  G4double           TargetThickness;
  G4double           TargetDiameter;
  G4double           TargetZetaPos;
     
  G4Material*        defaultMaterial;

  G4Material*        HornMaterial;
  G4Material*        ReflectorMaterial;
  G4Material*        TunnelMaterial;

  G4Material*        FillingMaterial;

  G4double           rO_Hall;
  G4double           L_Hall;

  //Inner conductor
  G4double InCondCurvRad;
  G4double InCondRad[2];
  G4double InCondDepth[3];
  G4double InCondLength[5];
  G4double InCondHalfLength;

  // Outer Conductor (tube)  
  G4double OutCondRad;
  G4double OutCondDepth;
  G4double OutCondLength;

  // Inner Conductor Closing Ring (tube + circular foil)    
  G4double ClosRgDepth; 

  //Inner Condutor End Flange
  G4double EndFlangeDepth; 
  G4double EndFlangeInRad; 
  G4double EndFlangeOutRad;

  // Double Skin (Water surround the horn and the double skin surround the water)
  G4double WaterThickness; 
  G4double SkinThickness;

  //Outer conductor Link Ring and Outer Conductor End flange
  G4double OutCondLnkRgLength[3];
  G4double OutCondLnkRgDepth; 
  G4double OutCondLnkRgRad[2];

  // Reflector
  G4double ReflInForwardRad; 
  G4double ReflOutRad; 
  G4double ReflInLength; 
  G4double ReflThickness;

  // Target
  G4double TargetRadius; 
  G4double TargetLength;

  // Tunnel
  G4double TunnelRadius; 
  G4double TunnelLength;

  G4int HornDesign;
  G4double MB_L1;// = 79.98*cm;
  G4double MB_L2;// = 30.6*cm;
  G4double MB_L3;// = 19.78*cm;
  G4double MB_L4;// = 30.2*cm;
  G4double MB_L5;// = 5.63*cm;
  G4double MB_R;//  = 13.9*cm;//curvature radius
  G4double MB_r;//  = 5.08*cm;//curvature radius  
  G4double MB_R0;// = 1.9*cm;//radial extension
  G4double MB_R1;// = 30*cm;//radial extension
  G4double MB_R2;// = 6.54*cm;//radial alcove

  G4double Horn_I1;//300000A
  G4double Horn_I2;//600000A

  G4double MB2_L1;// = 79.98*cm;
  G4double MB2_L2;// = 30.6*cm;
  G4double MB2_L3;// = 19.78*cm;
  G4double MB2_L4;// = 30.2*cm;
  G4double MB2_L5;// = 5.63*cm;
  G4double MB2_R;//  = 13.9*cm;//curvature radius
  G4double MB2_r;//  = 5.08*cm;//curvature radius  
  G4double MB2_R0;// = 1.9*cm;//radial extension
  G4double MB2_R1;// = 30*cm;//radial extension
  G4double MB2_R2;// = 6.54*cm;//radial alcove

  //-----------------------------------
            
  G4Tubs*            solidWorld;
  //G4Polycone*        solidWorld;
  G4LogicalVolume*   logicWorld;
  G4VPhysicalVolume* physiWorld;

  G4Tubs*            solidHorn;
  G4LogicalVolume*   logicHorn;
  G4VPhysicalVolume* physiHorn;

  //G4Tubs*            solidTunnel;
  G4Polycone*            solidTunnel;
  G4LogicalVolume*   logicTunnel;
  G4VPhysicalVolume* physiTunnel;

  G4Polycone* solidInnerConductor;
  G4LogicalVolume* logicInnerConductor;
  G4VPhysicalVolume* physiInnerConductor;

  G4Polycone* solidBField1;
  G4LogicalVolume* logicBField1;
  G4VPhysicalVolume* physiBField1;

  G4Tubs* solidClosingRing;
  G4LogicalVolume* logicClosingRing;
  G4VPhysicalVolume* physiClosingRing;

  G4Polycone* solidEndFlange;
  G4LogicalVolume* logicEndFlange;
  G4VPhysicalVolume* physiEndFlange;

  G4Tubs* solidOuterConductor;
  G4LogicalVolume* logicOuterConductor;
  G4VPhysicalVolume* physiOuterConductor;

  G4Polycone* solidOutCondLnk;
  G4LogicalVolume* logicOutCondLnk;
  G4VPhysicalVolume* physiOutCondLnk;

  G4Polycone* solidRefl;
  G4LogicalVolume* logicRefl;
  G4VPhysicalVolume* physiRefl;

  G4Polycone* solidBField2;
  G4LogicalVolume* logicBField2;
  G4VPhysicalVolume* physiBField2;

  G4Tubs* solidTopCylinder;
  G4LogicalVolume* logicTopCylinder;
  G4VPhysicalVolume* physiTopCylinder;

  G4Tubs* solidReflForwardRing;
  G4LogicalVolume* logicReflForwardRing;
  G4VPhysicalVolume* physiReflForwardRing;

  //----------------------------

  //G4Tubs*             solidTarget; //pointer to the solid Target
  G4Polycone*        solidTarget; //pointer to the solid Target
  G4LogicalVolume*   logicTarget; //pointer to the logical Target
  G4VPhysicalVolume* physiTarget; //pointer to the physical Target

  SBFieldSetup*        fEmFieldSetup;

  SBDetectorMessenger* detectorMessenger;  //pointer to the Messenger
      
private:
    
  void DefineMaterials();
  G4VPhysicalVolume* ConstructSystem();     
};
#endif
